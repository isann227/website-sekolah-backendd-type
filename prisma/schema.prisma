generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id                BigInt           @id @default(autoincrement())
  google_id         String?          @db.VarChar(255)
  name              String           @db.VarChar(255)
  username          String?          @db.VarChar(255)
  email             String           @unique(map: "users_email_unique") @db.VarChar(255)
  phone             BigInt           @unique(map: "users_phone_unique")
  email_verified_at DateTime?        @db.Timestamp(0)
  phone_verified_at DateTime?        @db.Timestamp(0)
  verify_code       String?          @db.VarChar(255)
  password          String           @db.VarChar(255)
  alamat            String?          @db.Text
  avatar            String?          @db.Text
  status            String           @default("INACTIVE") @db.VarChar(255)
  is_logedin        Boolean          @default(false)
  remember_token    String?          @db.VarChar(100)
  referal           String?          @db.VarChar(36)
  referal_id        String?          @db.VarChar(36)
  role              String           @db.VarChar(255)
  active_date       DateTime?        @db.Date
  jenis_user        jenis_user
  created_at        DateTime?        @db.Timestamp(0)
  updated_at        DateTime?        @db.Timestamp(0)
  profile_guru      profile_guru?
  profile_siswa      profile_siswa?
}
model profile_guru {
    id                BigInt            @id @default(autoincrement()) 
    user_id           BigInt            @unique
    users             users             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "profile_guru_user_id_foreign")
    nip               String            @db.VarChar(255)
    tempat_lahir      String?           @db.VarChar(255)
    tgl_lahir         DateTime?         @db.Date  
    golongan          String?           @db.VarChar(255)
    jenis_pns         String?           @db.VarChar(255)
}

model profile_siswa {
    id                BigInt            @id @default(autoincrement()) 
    user_id           BigInt            @unique
    users             users             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "profile_guru_user_id_foreign")
    nis               String            @db.VarChar(255)
    tempat_lahir      String?           @db.VarChar(255)
    tgl_lahir         DateTime?         @db.Date  
    nm_ibu            String?           @db.VarChar(255)
    nm_bapak          String?           @db.VarChar(255)
    th_masuk          String?           @db.VarChar(255)
    status            status_siswa
}

enum status_siswa {
  AKTIF
  KELUAR
  ALUMNI
}



model banner {
    id                BigInt           @id @default(autoincrement())
    judul             String           @db.VarChar(255)
    path              String           @db.Text
    image_name        String           @db.Text
    display_st        Display_st       @default(display)
    created_at        DateTime?        @db.Timestamp(0)
    updated_at        DateTime?        @db.Timestamp(0)
}


enum Display_st {
  draft
  display
}

enum jenis_user {
  operator
  guru
  siswa
}

